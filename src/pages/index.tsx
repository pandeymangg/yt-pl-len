import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import type { FormEvent } from "react";
import clsx from "clsx";

import { api } from "../utils/api";

const Home: NextPage = () => {
  const {
    mutate: calculateDuration,
    data,
    isLoading,
    isSuccess,
  } = api.calculate.calculate.useMutation();
  const [playlistLink, setPlaylistLink] = useState("");
  const [playbackSpeed, setPlaybackSpeed] = useState(1);

  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    calculateDuration({ playlistId: playlistLink, playbackSpeed });
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <div className="border border-red-600 p-4">
          <form className="flex flex-col gap-2" onSubmit={handleSubmit}>
            <input
              type="text"
              value={playlistLink}
              className="border border-gray-700 p-2"
              onChange={(e) => setPlaylistLink(e.target.value)}
            />

            <div className="flex items-center gap-1">
              {[0.5, 0.75, 1, 1.25, 1.5, 2].map((speed) => (
                <button
                  key={speed}
                  type="button"
                  onClick={() => setPlaybackSpeed(speed)}
                  className={clsx(
                    "border border-gray-700 p-2",
                    speed === playbackSpeed && "bg-indigo-700 text-white"
                  )}
                >
                  {speed}x
                </button>
              ))}
            </div>

            <button type="submit" className="border border-teal-700">
              Submit
            </button>

            <div>
              {isLoading && <div>Loading...</div>}
              {isSuccess && (
                <div>
                  {data?.data?.hours} hours {data?.data?.minutes} minutes{" "}
                  {data?.data.seconds} seconds
                </div>
              )}
            </div>
          </form>
        </div>
      </main>
    </>
  );
};

export default Home;
